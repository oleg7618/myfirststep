# main.py

import requests
import json

import telebot

from config import *
from exception import *
from api import *
import traceback



bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start', 'help'])
def help(message: telebot.types.Message):
    text = 'Валютные операции . \nЧтобы начать работу введите команду боту в следующем формате' \
           ' <название валюты> <в какую валюту перевести> <количество переводимой валюты>. ' \
           ' \nУвидеть список всех доступных валют /values'
    bot.reply_to(message, text)

@bot.message_handler(commands=['values'])
def values(message: telebot.types.Message):
    text = 'Доступные валюты:'
    for i in exchanges.keys():
        text = '\n'.join((text, i))
    bot.reply_to(message, text)


@bot.message_handler(content_types=['text'])
def converter(message: telebot.types.Message):
    values = message.text.split()
    try:
        if len(values) != 3:
            raise APIException('Неверное количество параметров!')

        answer = Converter.get_price(*values)
    except APIException as e:
        bot.reply_to(message, f"Ошибка в команде:\n{e}")
    except Exception as e:
        traceback.print_tb(e.__traceback__)
        bot.reply_to(message, f"Неизвестная ошибка:\n{e}")
    else:
        bot.reply_to(message, answer)

bot.polling(non_stop=True)

# config.py

exchanges = {
    'доллар': 'USD',
    'евро': 'EUR',
    'рубль': 'RUB'
}
TOKEN = "5470496455:AAGzR92ALZo_prcaKA7WhafibYLXseHRUC4"

# api.py

import requests
import json

base_key = 'USD'
sym_key = 'RUB'
amount = 100

url = (f"https://api.apilayer.com/currency_data/convert?to={base_key}&from={sym_key}&amount={amount}")

payload = {}
headers= {
  "apikey": "CzGoh12752wGYgGjOuPhz41jAhtdyPX8"
}

response = requests.request("GET", url, headers=headers, data = payload)

status_code = response.status_code
result = response.text

# exception.py

import json
import requests
from config import exchanges

class APIException(Exception):
    pass

class Converter:
        @staticmethod
        def get_price(base, sym, amount):
                try:
                        base_key = exchanges[base.lower()]
                except KeyError:
                        raise APIException(f"Валюта {base} не найдена!")

                try:
                        sym_key = exchanges[sym.lower()]
                except KeyError:
                        raise APIException(f"Валюта {sym} не найдена!")

                if base_key == sym_key:
                        raise APIException(f'Невозможно перевести одинаковые валюты {base}!')

                try:
                        amount = float(amount)
                except ValueError:
                        raise APIException(f'Не удалось обработать количество {amount}!')

                url = (f"https://api.apilayer.com/currency_data/convert?to={base_key}&from={sym_key}&amount={amount}")

                payload = {}
                headers = {
                "apikey": "CzGoh12752wGYgGjOuPhz41jAhtdyPX8"
                }

                response = requests.request("GET", url, headers=headers, data=payload)
                result = json.loads(response.content)
                message = f"Цена {amount} {sym_key} в {base_key}: {result:}"
                return message
